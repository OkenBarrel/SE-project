{"ast":null,"code":"import React,{useState}from'react';import{Button}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FileUpload=_ref=>{let{onFileSelect,acceptedFileTypes,label}=_ref;/**\r\n     * FileUpload 组件\r\n     *\r\n     * 用于上传文件的通用组件。支持指定文件类型和自定义按钮标签。\r\n     *\r\n     * Props:\r\n     * - onFileSelect (function): 文件选择后的回调函数,接受一个文件对象作为参数。\r\n     * - acceptedFileTypes (string): 接受的文件类型,用于限制文件选择器中可见的文件类型。例如:\".pdf,.doc,.docx,.txt\"\r\n     * - label (string): 按钮上的文本标签。\r\n     *\r\n     * Usage:\r\n     * const handleFileSelect = (file) => {\r\n     *         setFileName(file.name);\r\n     *     };\r\n     *\r\n     * <FileUpload\r\n     *   onFileSelect={handleFileSelect}\r\n     *   acceptedFileTypes=\".pdf,.doc,.docx,.txt\"\r\n     *   label=\"Upload Document\"\r\n     * />\r\n     *\r\n     * @param {Object} props - 组件的属性对象\r\n     * @returns {JSX.Element} - FileUpload 组件的 JSX 元素\r\n     */const handleFileChange=event=>{const file=event.target.files[0];if(file){const reader=new FileReader();reader.onload=e=>{onFileSelect(e.target.result);};reader.readAsDataURL(file);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{accept:acceptedFileTypes,style:{display:'none'},id:\"file-upload\",type:\"file\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",component:\"span\",children:label})})]});};export default FileUpload;","map":{"version":3,"names":["React","useState","Button","jsx","_jsx","jsxs","_jsxs","FileUpload","_ref","onFileSelect","acceptedFileTypes","label","handleFileChange","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","children","accept","style","display","id","type","onChange","htmlFor","variant","color","component"],"sources":["D:/SE-project/textbook_genius/frontend/reactapp/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\nconst FileUpload = ({ onFileSelect, acceptedFileTypes, label }) => {\r\n    /**\r\n     * FileUpload 组件\r\n     *\r\n     * 用于上传文件的通用组件。支持指定文件类型和自定义按钮标签。\r\n     *\r\n     * Props:\r\n     * - onFileSelect (function): 文件选择后的回调函数,接受一个文件对象作为参数。\r\n     * - acceptedFileTypes (string): 接受的文件类型,用于限制文件选择器中可见的文件类型。例如:\".pdf,.doc,.docx,.txt\"\r\n     * - label (string): 按钮上的文本标签。\r\n     *\r\n     * Usage:\r\n     * const handleFileSelect = (file) => {\r\n     *         setFileName(file.name);\r\n     *     };\r\n     *\r\n     * <FileUpload\r\n     *   onFileSelect={handleFileSelect}\r\n     *   acceptedFileTypes=\".pdf,.doc,.docx,.txt\"\r\n     *   label=\"Upload Document\"\r\n     * />\r\n     *\r\n     * @param {Object} props - 组件的属性对象\r\n     * @returns {JSX.Element} - FileUpload 组件的 JSX 元素\r\n     */\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                onFileSelect(e.target.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                accept={acceptedFileTypes}\r\n                style={{ display: 'none' }}\r\n                id=\"file-upload\"\r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n            />\r\n            <label htmlFor=\"file-upload\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    {label}\r\n                </Button>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGvC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAgD,IAA/C,CAAEC,YAAY,CAAEC,iBAAiB,CAAEC,KAAM,CAAC,CAAAH,IAAA,CAC1D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,KAAM,CAAAI,gBAAgB,CAAIC,KAAK,EAAK,CAChC,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAClC,GAAIF,IAAI,CAAE,CACN,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,MAAM,CAAIC,CAAC,EAAK,CACnBX,YAAY,CAACW,CAAC,CAACL,MAAM,CAACM,MAAM,CAAC,CACjC,CAAC,CACDJ,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC,CAC9B,CACJ,CAAC,CAED,mBACIR,KAAA,QAAAiB,QAAA,eACInB,IAAA,UACIoB,MAAM,CAAEd,iBAAkB,CAC1Be,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAC3BC,EAAE,CAAC,aAAa,CAChBC,IAAI,CAAC,MAAM,CACXC,QAAQ,CAAEjB,gBAAiB,CAC9B,CAAC,cACFR,IAAA,UAAO0B,OAAO,CAAC,aAAa,CAAAP,QAAA,cACxBnB,IAAA,CAACF,MAAM,EAAC6B,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,SAAS,CAACC,SAAS,CAAC,MAAM,CAAAV,QAAA,CACvDZ,KAAK,CACF,CAAC,CACN,CAAC,EACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}