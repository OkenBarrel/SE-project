{"ast":null,"code":"import{Button,DialogContent,Grid,Typography,TextField,Paper}from'@mui/material';import React,{Component,useState}from\"react\";import{useNavigate}from'react-router-dom';import{getCsrfToken}from'./CSRFToken';import Alert from'@mui/material/Alert';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');const navigate=useNavigate();const csrftoken=getCsrfToken();async function handleLogin(){//TODO: Just a dummy function, please use API to handle login function\nsetError('');setSuccess('');if(!username||!password){setError('Username and password are required.');return;};setTimeout(()=>{const requestOption={method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":csrftoken},body:JSON.stringify({username:username,password:password})};let response=fetch('/api/login',requestOption);if(!response.ok){setError(response.statusText);return;}// if (username === 'tw11' && password === 'password' && username === 'tw11') {\n//     setSuccess('Login successful!');\n//     // navigate(`/}`);\n//     //TODO: just for demo, please change to a real page.\n// } else {\n//     setError('Invalid username or password(For test purpose, please using tw11 to login).');\n// }\n},1000);};return/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"center\",alignItems:\"center\",style:{minHeight:'100vh'},children:/*#__PURE__*/_jsxs(Paper,{elevation:3,style:{padding:20,maxWidth:400},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{noValidate:true,autoComplete:\"off\",children:[/*#__PURE__*/_jsx(TextField,{label:\"Username\",fullWidth:true,margin:\"normal\",variant:\"outlined\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",type:\"password\",fullWidth:true,margin:\"normal\",variant:\"outlined\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",fullWidth:true,style:{marginTop:20},onClick:handleLogin,children:\"Login\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",style:{marginTop:20},children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",style:{marginTop:20},children:success})]})});};export default LoginPage;","map":{"version":3,"names":["Button","DialogContent","Grid","Typography","TextField","Paper","React","Component","useState","useNavigate","getCsrfToken","Alert","jsx","_jsx","jsxs","_jsxs","LoginPage","username","setUsername","password","setPassword","error","setError","success","setSuccess","navigate","csrftoken","handleLogin","setTimeout","requestOption","method","headers","body","JSON","stringify","response","fetch","ok","statusText","container","justifyContent","alignItems","style","minHeight","children","elevation","padding","maxWidth","variant","component","gutterBottom","noValidate","autoComplete","label","fullWidth","margin","value","onChange","e","target","type","color","marginTop","onClick","severity"],"sources":["D:/projects/SE-project/textbook_genius/frontend/reactapp/src/components/LoginPage.js"],"sourcesContent":["import {Button,DialogContent,Grid,Typography,TextField, Paper} from '@mui/material';\nimport React,{Component, useState} from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { getCsrfToken } from './CSRFToken';\nimport Alert from '@mui/material/Alert';\n\n\nconst LoginPage = () => {\n\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const navigate = useNavigate();\n    const csrftoken=getCsrfToken();\n\n    async function handleLogin(){\n        //TODO: Just a dummy function, please use API to handle login function\n        setError('');\n        setSuccess('');\n        if (!username || !password) {\n            setError('Username and password are required.');\n            return;\n        };\n        setTimeout(() => {\n            const requestOption={\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": csrftoken\n                },\n                body:JSON.stringify({\n                    username:username,\n                    password:password\n                })\n            };\n            let response=fetch('/api/login',requestOption);\n            if(!response.ok){\n                setError(response.statusText);\n                return;\n            }\n\n            // if (username === 'tw11' && password === 'password' && username === 'tw11') {\n            //     setSuccess('Login successful!');\n            //     // navigate(`/}`);\n            //     //TODO: just for demo, please change to a real page.\n            // } else {\n            //     setError('Invalid username or password(For test purpose, please using tw11 to login).');\n            // }\n        }, 1000);\n    };\n    return (\n        <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\n            <Paper elevation={3} style={{ padding: 20, maxWidth: 400 }}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Login\n                </Typography>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        label=\"Username\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        type=\"password\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        style={{ marginTop: 20 }}\n                        onClick={handleLogin}\n                    >\n                        Login\n                    </Button>\n                </form>\n                {error && <Alert severity=\"error\" style={{ marginTop: 20 }}>{error}</Alert>}\n                {success && <Alert severity=\"success\" style={{ marginTop: 20 }}>{success}</Alert>}\n            </Paper>\n        </Grid>\n    );\n}\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}