{"ast":null,"code":"var _jsxFileName = \"D:\\\\SE-project\\\\textbook_genius\\\\frontend\\\\reactapp\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { Button, DialogContent, Grid, Typography, TextField, Paper } from '@mui/material';\nimport React, { Component, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { getCsrfToken } from './CSRFToken';\nimport Alert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const csrftoken = getCsrfToken();\n  async function handleLogin() {\n    //TODO: Just a dummy function, please use API to handle login function\n    setError('');\n    setSuccess('');\n    if (!username || !password) {\n      setError('Username and password are required.');\n      return;\n    }\n    ;\n    try {\n      const requestOption = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrftoken\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      };\n      const response = await fetch('/api/login', requestOption);\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.detail || 'Invalid username or password.');\n        return;\n      }\n      const data = await response.json();\n      setSuccess('Login successful!');\n      // if (username === 'tw11' && password === 'password' && username === 'tw11') {\n      //     setSuccess('Login successful!');\n      //     // navigate(`/}`);\n      //     //TODO: just for demo, please change to a real page.\n      // } else {\n      //     setError('Invalid username or password(For test purpose, please using tw11 to login).');\n      // }\n    } catch (error) {\n      setError('An error occurred. Please try again.');\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: 20,\n        maxWidth: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          fullWidth: true,\n          margin: \"normal\",\n          variant: \"outlined\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          variant: \"outlined\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          style: {\n            marginTop: 20\n          },\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        style: {\n          marginTop: 20\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        style: {\n          marginTop: 20\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"WAHnh3OtwT7QKwyxWYWaiIXnWkY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Button","DialogContent","Grid","Typography","TextField","Paper","React","Component","useState","useNavigate","getCsrfToken","Alert","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","error","setError","success","setSuccess","navigate","csrftoken","handleLogin","requestOption","method","headers","body","JSON","stringify","response","fetch","ok","errorData","json","detail","data","container","justifyContent","alignItems","style","minHeight","children","elevation","padding","maxWidth","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","autoComplete","label","fullWidth","margin","value","onChange","e","target","type","color","marginTop","onClick","severity","_c","$RefreshReg$"],"sources":["D:/SE-project/textbook_genius/frontend/reactapp/src/components/LoginPage.js"],"sourcesContent":["import {Button,DialogContent,Grid,Typography,TextField, Paper} from '@mui/material';\r\nimport React,{Component, useState} from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getCsrfToken } from './CSRFToken';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nconst LoginPage = () => {\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const navigate = useNavigate();\r\n    const csrftoken=getCsrfToken();\r\n\r\n    async function handleLogin(){\r\n        //TODO: Just a dummy function, please use API to handle login function\r\n        setError('');\r\n        setSuccess('');\r\n        if (!username || !password) {\r\n            setError('Username and password are required.');\r\n            return;\r\n        };\r\n       try{\r\n            const requestOption={\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"X-CSRFToken\": csrftoken\r\n                },\r\n                body:JSON.stringify({\r\n                    username:username,\r\n                    password:password\r\n                })\r\n            };\r\n            const response=await fetch('/api/login',requestOption);\r\n            if(!response.ok){\r\n                const errorData = await response.json();\r\n                setError(errorData.detail || 'Invalid username or password.');\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setSuccess('Login successful!');\r\n            // if (username === 'tw11' && password === 'password' && username === 'tw11') {\r\n            //     setSuccess('Login successful!');\r\n            //     // navigate(`/}`);\r\n            //     //TODO: just for demo, please change to a real page.\r\n            // } else {\r\n            //     setError('Invalid username or password(For test purpose, please using tw11 to login).');\r\n            // }\r\n        }catch (error) {\r\n            setError('An error occurred. Please try again.');\r\n        }\r\n    };\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\r\n            <Paper elevation={3} style={{ padding: 20, maxWidth: 400 }}>\r\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                    Login\r\n                </Typography>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        label=\"Username\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        style={{ marginTop: 20 }}\r\n                        onClick={handleLogin}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n                {error && <Alert severity=\"error\" style={{ marginTop: 20 }}>{error}</Alert>}\r\n                {success && <Alert severity=\"success\" style={{ marginTop: 20 }}>{success}</Alert>}\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}